<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="mastermindgame_java.Settings.TestTemplateMatrix" tests="5" skipped="0" failures="1" errors="0" timestamp="2024-04-21T22:38:46" hostname="DESKTOP-R0UEMP9" time="0.073">
  <properties/>
  <testcase name="[1] [0, 0, 0, 0], [0, 1, 3], 0, ciao" classname="mastermindgame_java.Settings.TestTemplateMatrix" time="0.054">
    <failure message="org.opentest4j.AssertionFailedError: expected: &lt;ciao&gt; but was: &lt;Trial&#9;Pos1&#9;Pos2&#9;Pos3&#9;Pos4&#9;OK&#9;N-OK&#9;NO&#10;&#13;&#10;1&#9;0&#9;0&#9;0&#9;0&#9;0&#9;1&#9;3&#9;&#13;&#10;&#13;&#10;Trial&#9;Pos1&#9;Pos2&#9;Pos3&#9;Pos4&#9;OK&#9;N-OK&#9;NO&#10;&#13;&#10;1&#9;0&#9;0&#9;0&#9;0&#9;0&#9;1&#9;3&#9;&#13;&#10;&#13;&#10;&gt;" type="org.opentest4j.AssertionFailedError">org.opentest4j.AssertionFailedError: expected: &lt;ciao&gt; but was: &lt;Trial	Pos1	Pos2	Pos3	Pos4	OK	N-OK	NO

1	0	0	0	0	0	1	3	

Trial	Pos1	Pos2	Pos3	Pos4	OK	N-OK	NO

1	0	0	0	0	0	1	3	

&gt;
	at app//org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)
	at app//org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)
	at app//org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)
	at app//org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)
	at app//org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)
	at app//org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1145)
	at app//mastermindgame_java.Settings.TestTemplateMatrix.testPrintTemplate(TestTemplateMatrix.java:59)
	at java.base@21.0.2/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base@21.0.2/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base@21.0.2/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base@21.0.2/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base@21.0.2/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base@21.0.2/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base@21.0.2/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base@21.0.2/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base@21.0.2/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base@21.0.2/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base@21.0.2/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base@21.0.2/java.util.stream.Streams$StreamBuilderImpl.forEachRemaining(Streams.java:411)
	at java.base@21.0.2/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at java.base@21.0.2/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base@21.0.2/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base@21.0.2/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base@21.0.2/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base@21.0.2/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)
	at java.base@21.0.2/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base@21.0.2/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base@21.0.2/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base@21.0.2/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base@21.0.2/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@21.0.2/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base@21.0.2/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base@21.0.2/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base@21.0.2/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base@21.0.2/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base@21.0.2/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base@21.0.2/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base@21.0.2/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base@21.0.2/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base@21.0.2/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base@21.0.2/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@21.0.2/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base@21.0.2/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base@21.0.2/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base@21.0.2/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base@21.0.2/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base@21.0.2/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base@21.0.2/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base@21.0.2/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base@21.0.2/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base@21.0.2/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base@21.0.2/java.util.ArrayList.forEach(ArrayList.java:1596)
</failure>
  </testcase>
  <testcase name="[1] [0, 0, 0, 0], [0, 1, 3], 0, [1, 0, 0, 0, 0, 0, 1, 3]" classname="mastermindgame_java.Settings.TestTemplateMatrix" time="0.006"/>
  <testcase name="[2] [4, 2, 1, 1], [1, 1, 2], 1, [2, 4, 2, 1, 1, 1, 1, 2]" classname="mastermindgame_java.Settings.TestTemplateMatrix" time="0.001"/>
  <testcase name="[3] [0, 3, 2, 5], [4, 0, 0], 5, [6, 0, 3, 2, 5, 4, 0, 0]" classname="mastermindgame_java.Settings.TestTemplateMatrix" time="0.001"/>
  <testcase name="[4] [1, 2, 0, 2], [3, 1, 0], 2, [3, 1, 2, 0, 2, 3, 1, 0]" classname="mastermindgame_java.Settings.TestTemplateMatrix" time="0.001"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
